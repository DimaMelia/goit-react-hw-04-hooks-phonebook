{"version":3,"sources":["Components/Form/Form.module.css","Components/Container/Container.module.css","Components/Filter/Filter.module.css","Components/ContactListItem/ContactListItem.module.css","Components/Form/ContactForm.js","Components/Container/Container.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","id","name","number","contact","setContact","onInputChange","e","target","value","className","s","form","preventDefault","uuidv4","label","input","type","onChange","button","Container","title","children","container","ContactListItem","onDelete","onClick","ContactList","contacts","map","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","contactFilter","setFilter","useEffect","setItem","stringify","addedContact","generatedId","trim","find","alert","normFilter","toLowerCase","filter","includes","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e32dd51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1xmcB\",\"label\":\"Form_label__2fwHV\",\"input\":\"Form_input__2a3Md\",\"button\":\"Form_button__djCz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2mY4D\",\"title\":\"Container_title__1K1k3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2jrom\",\"input\":\"Filter_input__2aNrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__348RD\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [contact, setContact] = useState({ id: '', name: '', number: '' });\r\n\r\n  const onInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setContact({ ...contact, [name]: value });\r\n  };\r\n\r\n  const reset = () => setContact({ id: '', name: '', number: '' });\r\n\r\n  const onAddContact = e => {\r\n    e.preventDefault();\r\n    onSubmit(contact, uuidv4());\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onAddContact}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contact.name}\r\n          onChange={onInputChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={contact.number}\r\n          onChange={onInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ===========================================================================\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     id: '',\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   onInputChange = e => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   onAddContact = e => {\r\n//     e.preventDefault();\r\n//     this.setState({ id: uuidv4() }, () => {\r\n//       this.props.onSubmit(this.state);\r\n//       this.reset();\r\n//     });\r\n//   };\r\n\r\n//   reset = () => this.setState({ id: '', name: '', number: '' });\r\n\r\n//   render() {\r\n//     return (\r\n//       <form className={s.form} onSubmit={this.onAddContact}>\r\n//         <label className={s.label}>\r\n//           Name\r\n//           <input\r\n//             className={s.input}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={this.state.name}\r\n//             onChange={this.onInputChange}\r\n//           />\r\n//         </label>\r\n//         <label className={s.label}>\r\n//           Number\r\n//           <input\r\n//             className={s.input}\r\n//             type=\"text\"\r\n//             name=\"number\"\r\n//             value={this.state.number}\r\n//             onChange={this.onInputChange}\r\n//           />\r\n//         </label>\r\n//         <button className={s.button} type=\"submit\">\r\n//           Add contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default ContactForm;\r\n","import s from './Container.module.css';\r\n\r\nfunction Container({ title, children }) {\r\n  return (\r\n    <section className={s.container}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactListItem;\r\n","import ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          id={id}\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport ContactForm from './Components/Form/ContactForm';\nimport Container from './Components/Container/Container';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [contactFilter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onFormSubmit = (addedContact, generatedId) => {\n    if (addedContact.name.trim() === '' && addedContact.number.trim() === '') {\n      alert(`Enter contact name and number`);\n      return;\n    }\n    if (contacts.find(contact => contact.name === addedContact.name)) {\n      alert(`${addedContact.name} is already in contacts`);\n      return;\n    } else {\n      setContacts([...contacts, { ...addedContact, id: generatedId }]);\n    }\n  };\n\n  const onFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const onDeleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id) ?? []);\n  };\n\n  const visibleContacts = () => {\n    const normFilter = contactFilter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normFilter),\n    );\n  };\n\n  return (\n    <Container title=\"Phonebook\">\n      <ContactForm onSubmit={onFormSubmit} />\n      <h2>Contacts</h2>\n      <Filter value={contactFilter} onChange={onFilterChange} />\n      <ContactList contacts={visibleContacts()} onDelete={onDeleteContact} />\n    </Container>\n  );\n}\n\n// ===========================================================================\n// class App extends Component {\n//   state = {\n//     contacts: [\n// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   componentDidMount() {\n//     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   onFormSubmit = addedContact => {\n//     if (addedContact.name.trim() === '' && addedContact.number.trim() === '') {\n//       alert(`Enter contact name and number`);\n//       return;\n//     }\n//     if (\n//       this.state.contacts.find(contact => contact.name === addedContact.name)\n//     ) {\n//       alert(`${addedContact.name} is already in contacts`);\n//       return;\n//     } else {\n//       this.setState(prev => ({ contacts: [...prev.contacts, addedContact] }));\n//     }\n//   };\n\n//   onFilterChange = e => {\n//     this.setState({ filter: e.target.value });\n//   };\n\n//   onDeleteContact = id => {\n//     this.setState(prev => ({\n//       contacts: prev.contacts.filter(contact => contact.id !== id),\n//     }));\n//   };\n\n//   visibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normFilter),\n//     );\n//   };\n\n//   render() {\n//     const filteredContacts = this.visibleContacts();\n\n//     return (\n//       <Container title=\"Phonebook\">\n//         <ContactForm onSubmit={this.onFormSubmit} />\n//         <h2>Contacts</h2>\n//         <Filter value={this.state.filter} onChange={this.onFilterChange} />\n//         <ContactList\n//           contacts={filteredContacts}\n//           onDelete={this.onDeleteContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}